if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
quit()
setwd("/Users/adminuser/Desktop/CDC/Bayesian/pyamd")
#### provide genotype datasheet
data = read.csv("Example_haplotype_data_sheet.txt",skip=0,stringsAsFactors = FALSE, sep = "\t")
## provide names of loci as per the genotype datasheet provided
locinames = c("CDC1","CDC2","CDC3","CDC4","X378_PART_A","X378_PART_B","X378_PART_C",
"X360i2_PART_A","X360i2_PART_B","X360i2_PART_C","X360i2.PART_D",
"Junction","MSR_Left","MSR_Right")
locinames_base = c("CDC1","CDC2","CDC3","CDC4","X378","X360","Junction","MSR")
## provide ploidy of each locus - ordered the same as the locinames variable
ploidy = c(2,2,2,2,2,2,2,2,2,2,2,1,1,1)
### is.na means not missing data
data = data[!is.na(data$Seq_ID) & data$Seq_ID != "",]
ids = data$Seq_ID
nids = length(ids)
nloci = length(locinames)
newdata = c()
datacompleteness = c()
# MaxMOI for each locus
for (j in 1:nloci) {
locicolumns = grepl(paste(locinames[j],"",sep=""),colnames(data))
print(colnames(data))
print(locicolumns)
raw_alleles = data[,locicolumns]
maxMOI = max(c(2,rowSums(raw_alleles == "X",na.rm=TRUE)))
MOI = rowSums(raw_alleles == "X",na.rm=TRUE)
nalleles = sum(locicolumns,na.rm=TRUE)
newdatatemp = rbind(matrix(NA,nids,maxMOI))
sapply(1:nids,function (x) if (MOI[x] > 0) { newdatatemp[x,1:MOI[x]] <<- paste("Hap_",which(raw_alleles[x,] == "X"),sep="")})
if (ploidy[j] > 1) {
sapply(1:nids,function (x) if (MOI[x] == 1) { newdatatemp[x,1:2] <<- paste("Hap_",which(raw_alleles[x,] == "X"),sep="")})
}
colnames(newdatatemp) = paste(1:maxMOI,"_Hap_",locinames[j],sep="")
newdata = cbind(newdata,newdatatemp )
datacompleteness  = cbind(datacompleteness,MOI)
}
locicolumns = grepl(paste(locinames[j],"",sep=""),colnames(data))
print(colnames(data))
print(locicolumns)
raw_alleles = data[,locicolumns]
maxMOI = max(c(2,rowSums(raw_alleles == "X",na.rm=TRUE)))
MOI = rowSums(raw_alleles == "X",na.rm=TRUE)
nalleles = sum(locicolumns,na.rm=TRUE)
newdatatemp = rbind(matrix(NA,nids,maxMOI))
newdatatemp
colnames
colnames(newdatatemp)
sapply(1:nids,function (x) if (MOI[x] > 0) { newdatatemp[x,1:MOI[x]] <<- paste("Hap_",which(raw_alleles[x,] == "X"),sep="")})
if (ploidy[j] > 1) {
sapply(1:nids,function (x) if (MOI[x] == 1) { newdatatemp[x,1:2] <<- paste("Hap_",which(raw_alleles[x,] == "X"),sep="")})
}
newdata
print(colnames(data))
locicolumns
raw_alleles
maxMOI
MOI
nalleles
newdatatemp
MOI
newdatatemp
raw_alleles
nalleles
MOI
locicolumns
raw_alleles
locicolumns = grepl(paste(locinames[j],"",sep=""),colnames(data))
print(colnames(data))
print(locicolumns)
raw_alleles = data[,locicolumns]
raw_alleles
#### provide genotype datasheet
data = read.csv("Example_haplotype_data_sheet.txt",skip=0,stringsAsFactors = FALSE, sep = "\t")
raw_alleles
locicolumns = grepl(paste(locinames[j],"",sep=""),colnames(data))
print(colnames(data))
print(locicolumns)
raw_alleles = data[,locicolumns]
maxMOI = max(c(2,rowSums(raw_alleles == "X",na.rm=TRUE)))
MOI = rowSums(raw_alleles == "X",na.rm=TRUE)
MOI
nalleles
newdatatemp
newdatatemp
MOI
colnames(newdatatemp)
newdata
newdatatemp = rbind(matrix(NA,nids,maxMOI))
newdatatemp
sapply(1:nids,function (x) if (MOI[x] > 0) { newdatatemp[x,1:MOI[x]] <<- paste("Hap_",which(raw_alleles[x,] == "X"),sep="")})
if (ploidy[j] > 1) {
sapply(1:nids,function (x) if (MOI[x] == 1) { newdatatemp[x,1:2] <<- paste("Hap_",which(raw_alleles[x,] == "X"),sep="")})
}
colnames(newdatatemp)
newdata
print(colnames(data))
print(locicolumns)
raw_alleles
raw_alleles = data[,locicolumns]
raw_alleles
nalleles
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
#print(colnames(data))
print(locicolumns)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
newdata
locicolumns
raw_alleles = data[,locicolumns]
raw_alleles
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
raw_alleles
rowSums(raw_alleles == "X",na.rm=FALSE)
rowSums(raw_alleles == "X",na.rm=TRUE)
raw_alleles
MOI
nalleles
locicolumns
#print(nalleles)
newdatatemp = rbind(matrix(NA,nids,maxMOI))
newdatatemp
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
colnames(newdatatemp) = paste(1:maxMOI,"_Hap_",locinames[j],sep="")
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
source('~/Desktop/CDC/Bayesian/import_data_V2.r', echo=TRUE)
